# Reference: https://github.com/golangci/golangci-lint/blob/main/.golangci.reference.yml

# Defines the configuration version.
# The only possible value is "2".
version: "2"

# Options for analysis running.
run:
  # Timeout for analysis, e.g. 30s, 5m.
  timeout: 10m

  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: readonly

  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17
  # go: "1.xx"

issues:
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false

  # Fix found issues (if it's supported by the linter).
  # Default: false
  fix: false

linters:
  # Enable specific linter.
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - bodyclose
    - errcheck
    - exhaustive
    - exptostd
    - gocritic
    - godot
    - govet
    - musttag
    - noctx
    - protogetter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - unused
    - usestdlibvars
    - whitespace

  settings:
    staticcheck:
      # SAxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks
      # Example (to disable some checks): [ "all", "-SA1000", "-SA1001"]
      # Default: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
      checks: [ "all", "-ST1003" ]
    revive:
      rules:
        # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#confusing-naming
        - name: confusing-naming
          severity: warning
          disabled: true
          exclude: [""]

  # Defines a set of rules to ignore issues.
  # It does not skip the analysis, and so does not ignore "typecheck" errors.
  exclusions:
    # Predefined exclusion rules.
    # Default: []
    presets:
      - comments

formatters:
  # Enable specific formatter.
  # Default: [] (uses standard Go formatting)
  enable:
    - gofmt
    - goimports

  # Formatters settings.
  settings:
    goimports:
      # A list of prefixes, which, if set, checks import paths
      # with the given prefixes are grouped after 3rd-party packages.
      # Default: []
      local-prefixes:
        - template
